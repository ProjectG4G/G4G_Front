{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\nimport axios from 'axios';\nexport const updateUser = createAsyncThunk('users/updateUser', async (_, thunkAPI) => {\n  try {\n    let userId = localStorage.getItem('userID');\n    const response = await PublicApi.get(`/auth/users/${userId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","PublicApi","axios","updateUser","_","thunkAPI","userId","localStorage","getItem","response","get","console","log","data","err","rejectWithValue","message"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/user.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\n\nimport axios from 'axios';\n\nexport const updateUser = createAsyncThunk(\n  'users/updateUser',\n  async (_,thunkAPI) => {\n    try{\n        let userId = localStorage.getItem('userID')\n        const response = await PublicApi.get(`/auth/users/${userId}`);\n        console.log(response.data)\n        return response.data;\n    }\n    catch (err) {\n        return thunkAPI.rejectWithValue(err.response.data.message);            \n    }\n\n  }\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,EAAEC,SAAS,QAAQ,OAAO;AAEtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,kBAAkB,EAClB,OAAOK,CAAC,EAACC,QAAQ,KAAK;EACpB,IAAG;IACC,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACS,GAAG,CAAE,eAAcJ,MAAO,EAAC,CAAC;IAC7DK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACxB,CAAC,CACD,OAAOC,GAAG,EAAE;IACR,OAAOT,QAAQ,CAACU,eAAe,CAACD,GAAG,CAACL,QAAQ,CAACI,IAAI,CAACG,OAAO,CAAC;EAC9D;AAEF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}