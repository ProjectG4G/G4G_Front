{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nimport jwt_decode from 'jwt-decode';\nexport const login = createAsyncThunk('auth/login', async (form, thunkAPI) => {\n  try {\n    const response = await API.post(`auth/login/`, form);\n    console.log('Login response: ', response.data);\n    let token = response.data.access;\n    let decoded = jwt_decode(token);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","jwt_decode","login","form","thunkAPI","response","post","console","log","data","token","access","decoded","err","rejectWithValue","message"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/api/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nimport jwt_decode from 'jwt-decode'\n\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (form, thunkAPI) => {\n        try {\n            const response = await API.post(`auth/login/`, form);\n            console.log('Login response: ', response.data);\n            let token = response.data.access\n            let decoded = jwt_decode(token)\n            return response.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,QAAQ,OAAO;AAC3B,OAAOC,UAAU,MAAM,YAAY;AAGnC,OAAO,MAAMC,KAAK,GAAGH,gBAAgB,CACjC,YAAY,EACZ,OAAOI,IAAI,EAAEC,QAAQ,KAAK;EACtB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAE,aAAY,EAAEH,IAAI,CAAC;IACpDI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC9C,IAAIC,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACE,MAAM;IAChC,IAAIC,OAAO,GAAGX,UAAU,CAACS,KAAK,CAAC;IAC/B,OAAOL,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACV,OAAOT,QAAQ,CAACU,eAAe,CAACD,GAAG,CAACR,QAAQ,CAACI,IAAI,CAACM,OAAO,CAAC;EAC9D;AACJ,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}