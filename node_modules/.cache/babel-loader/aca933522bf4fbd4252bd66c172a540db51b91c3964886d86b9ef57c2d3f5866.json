{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RegisterView } from '../components/RegisterView';\nimport { setLanguage } from '../redux/slices/generalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register(props) {\n  _s();\n  let dispatch = useDispatch();\n  const {\n    language\n  } = useSelector(state => state.general);\n  const handleLanguageChange = e => {\n    dispatch(setLanguage(e.target.value));\n  };\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    watch,\n    getValues\n  } = useForm({\n    mode: \"onChange\"\n  });\n  function handleFormSubmit() {\n    console.log('Submit!');\n  }\n  const emailProps = register(\"email\", {\n    required: \"поле обязательно к заполнению\",\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"напишите правильный email\"\n    }\n  });\n  const passwordProps = register(\"password\", {\n    required: \"поле обязательно к заполнению\",\n    minLength: {\n      value: 8,\n      message: \"8 минимум  символов\"\n    }\n  });\n  const passwordConfirmProps = register(\"passwordСonfirm\", {\n    required: \"поле обязательно к заполнению\",\n    validate: val => {\n      const {\n        password\n      } = getValues();\n      if (watch(\"password\") !== val) {\n        return password === val || \"пароли не совпадают\";\n      }\n    }\n  });\n  const firstNameProps = register(\"first_name\", {\n    required: \"поле обязательно к заполнению\"\n  });\n  const lastNameProps = register(\"last_name\", {\n    required: \"поле обязательно к заполнению\"\n  });\n  const checkBox = register(\"confirm\", {\n    required: true\n  });\n  const districtProps = register(\"district\");\n  const regionProps = {\n    ...register(\"region\", {\n      required: true\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterView, {\n    onFormSubmit: handleSubmit(handleFormSubmit),\n    emailProps: emailProps,\n    checkBox: checkBox,\n    passwordProps: passwordProps,\n    errors: errors,\n    passwordConfirmProps: passwordConfirmProps,\n    firstNameProps: firstNameProps,\n    lastNameProps: lastNameProps,\n    handleLanguageChange: handleLanguageChange,\n    isValid: isValid,\n    ...props,\n    districtProps: districtProps,\n    language: language\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"uhhVZtuEwxoG9QI+JdXPYEwd5Qk=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useForm","useDispatch","useSelector","RegisterView","setLanguage","Register","props","dispatch","language","state","general","handleLanguageChange","e","target","value","register","formState","errors","isValid","handleSubmit","watch","getValues","mode","handleFormSubmit","console","log","emailProps","required","pattern","message","passwordProps","minLength","passwordConfirmProps","validate","val","password","firstNameProps","lastNameProps","checkBox","districtProps","regionProps"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RegisterView } from '../components/RegisterView';\nimport { setLanguage } from '../redux/slices/generalSlice';\n\nexport function Register(props) {\n    let dispatch = useDispatch()\n    const { language } = useSelector(state => state.general);\n\n\n    const handleLanguageChange = e => {\n        dispatch(setLanguage(e.target.value));\n    }\n    const {\n        register,\n        formState: { errors, isValid },\n        handleSubmit,\n        watch,\n        getValues,\n    } = useForm({mode: \"onChange\"});\n    \n\n\n    function handleFormSubmit() {\n        console.log('Submit!');\n    }\n\n    const emailProps = register(\"email\", {\n        required: \"поле обязательно к заполнению\",\n        pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: \"напишите правильный email\",\n        }\n    });\n\n    const passwordProps = register(\"password\", {\n        required: \"поле обязательно к заполнению\",\n        minLength: {\n            value: 8,\n            message: \"8 минимум  символов\",\n        }\n    });\n    const passwordConfirmProps = register(\"passwordСonfirm\", {\n        required: \"поле обязательно к заполнению\",\n        validate: (val) => {\n            const { password } = getValues();\n            if (watch(\"password\") !== val) {\n                return (\n                    password === val || \"пароли не совпадают\"\n                );\n            }\n        },\n    })\n    const firstNameProps =    register(\"first_name\", {\n        required: \"поле обязательно к заполнению\",\n    })\n    const lastNameProps =    register(\"last_name\", {\n        required: \"поле обязательно к заполнению\",\n    })\n    const checkBox = register(\"confirm\", {\n        required: true,\n    })\n    const districtProps =  register(\"district\")\n    const regionProps =   {...register(\"region\", { required: true })}\n\n    \n\n    return (\n        <RegisterView \n            onFormSubmit={handleSubmit(handleFormSubmit)}\n            emailProps={emailProps}\n            checkBox={checkBox}\n            passwordProps={passwordProps}\n            errors={errors}\n            passwordConfirmProps={passwordConfirmProps}\n            firstNameProps={firstNameProps}\n            lastNameProps = {lastNameProps}\n            handleLanguageChange={handleLanguageChange}\n            isValid={isValid}\n            {...props}\n            districtProps={districtProps}\n            language={language}/>\n            \n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,WAAW,QAAQ,8BAA8B;AAAC;AAE3D,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAC5B,IAAIC,QAAQ,GAAGN,WAAW,EAAE;EAC5B,MAAM;IAAEO;EAAS,CAAC,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;EAGxD,MAAMC,oBAAoB,GAAGC,CAAC,IAAI;IAC9BL,QAAQ,CAACH,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EACzC,CAAC;EACD,MAAM;IACFC,QAAQ;IACRC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAQ,CAAC;IAC9BC,YAAY;IACZC,KAAK;IACLC;EACJ,CAAC,GAAGrB,OAAO,CAAC;IAACsB,IAAI,EAAE;EAAU,CAAC,CAAC;EAI/B,SAASC,gBAAgB,GAAG;IACxBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAC1B;EAEA,MAAMC,UAAU,GAAGX,QAAQ,CAAC,OAAO,EAAE;IACjCY,QAAQ,EAAE,+BAA+B;IACzCC,OAAO,EAAE;MACLd,KAAK,EAAE,sJAAsJ;MAC7Je,OAAO,EAAE;IACb;EACJ,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGf,QAAQ,CAAC,UAAU,EAAE;IACvCY,QAAQ,EAAE,+BAA+B;IACzCI,SAAS,EAAE;MACPjB,KAAK,EAAE,CAAC;MACRe,OAAO,EAAE;IACb;EACJ,CAAC,CAAC;EACF,MAAMG,oBAAoB,GAAGjB,QAAQ,CAAC,iBAAiB,EAAE;IACrDY,QAAQ,EAAE,+BAA+B;IACzCM,QAAQ,EAAGC,GAAG,IAAK;MACf,MAAM;QAAEC;MAAS,CAAC,GAAGd,SAAS,EAAE;MAChC,IAAID,KAAK,CAAC,UAAU,CAAC,KAAKc,GAAG,EAAE;QAC3B,OACIC,QAAQ,KAAKD,GAAG,IAAI,qBAAqB;MAEjD;IACJ;EACJ,CAAC,CAAC;EACF,MAAME,cAAc,GAAMrB,QAAQ,CAAC,YAAY,EAAE;IAC7CY,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMU,aAAa,GAAMtB,QAAQ,CAAC,WAAW,EAAE;IAC3CY,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMW,QAAQ,GAAGvB,QAAQ,CAAC,SAAS,EAAE;IACjCY,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAMY,aAAa,GAAIxB,QAAQ,CAAC,UAAU,CAAC;EAC3C,MAAMyB,WAAW,GAAK;IAAC,GAAGzB,QAAQ,CAAC,QAAQ,EAAE;MAAEY,QAAQ,EAAE;IAAK,CAAC;EAAC,CAAC;EAIjE,oBACI,QAAC,YAAY;IACT,YAAY,EAAER,YAAY,CAACI,gBAAgB,CAAE;IAC7C,UAAU,EAAEG,UAAW;IACvB,QAAQ,EAAEY,QAAS;IACnB,aAAa,EAAER,aAAc;IAC7B,MAAM,EAAEb,MAAO;IACf,oBAAoB,EAAEe,oBAAqB;IAC3C,cAAc,EAAEI,cAAe;IAC/B,aAAa,EAAIC,aAAc;IAC/B,oBAAoB,EAAE1B,oBAAqB;IAC3C,OAAO,EAAEO,OAAQ;IAAA,GACbZ,KAAK;IACT,aAAa,EAAEiC,aAAc;IAC7B,QAAQ,EAAE/B;EAAS;IAAA;IAAA;IAAA;EAAA,QAAE;AAGjC;AAAC,GA/EeH,QAAQ;EAAA,QACLJ,WAAW,EACLC,WAAW,EAY5BF,OAAO;AAAA;AAAA,KAdCK,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}