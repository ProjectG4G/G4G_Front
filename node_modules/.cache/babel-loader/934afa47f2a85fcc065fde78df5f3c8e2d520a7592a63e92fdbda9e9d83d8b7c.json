{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = 'http://34.159.231.164/api/';\nexport const API = axios.create({\n  baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const PublicApi = axios.create({\n  baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst refreshToken = async () => {\n  // Make an API call to refresh the token\n  const response = await API.post('http://34.159.231.164/api/refresh', {\n    refreshToken: localStorage.getItem('refreshToken')\n  });\n\n  // Update the token and refreshToken in local storage\n  localStorage.setItem('token', response.data.token);\n  localStorage.setItem('refreshToken', response.data.refreshToken);\n\n  // Update the authorization header for subsequent requests\n  API.defaults.headers.common['Authorization'] = 'Bearer ' + response.data.token;\n\n  // Return the refreshed token\n  return response.data.token;\n};\nAPI.interceptors.request.use(req => {\n  req.headers['Authorization'] = 'Bearer ' + localStorage.getItem('token');\n  return req;\n});","map":{"version":3,"names":["axios","baseURL","API","create","headers","PublicApi","refreshToken","response","post","localStorage","getItem","setItem","data","token","defaults","common","interceptors","request","use","req"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/api.js"],"sourcesContent":["\nimport axios from \"axios\";\n\nconst baseURL = 'http://34.159.231.164/api/';\n\n\nexport const API = axios.create({\n\tbaseURL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t}\n});\n\nexport const PublicApi = axios.create({\n\tbaseURL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t}\n});\n\nconst refreshToken = async () => {\n    // Make an API call to refresh the token\n    const response = await API.post('http://34.159.231.164/api/refresh', {\n        refreshToken: localStorage.getItem('refreshToken')\n    });\n\n    // Update the token and refreshToken in local storage\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('refreshToken', response.data.refreshToken);\n\n    // Update the authorization header for subsequent requests\n    API.defaults.headers.common['Authorization'] = 'Bearer ' + response.data.token;\n\n    // Return the refreshed token\n    return response.data.token;\n};\n\nAPI.interceptors.request.use(\n    req => {\n        req.headers['Authorization'] = 'Bearer ' + localStorage.getItem('token');\n        return req;\n    }\n);"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAG5C,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BF,OAAO;EACPG,OAAO,EAAE;IACR,cAAc,EAAE;EACjB;AACD,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGL,KAAK,CAACG,MAAM,CAAC;EACrCF,OAAO;EACPG,OAAO,EAAE;IACR,cAAc,EAAE;EACjB;AACD,CAAC,CAAC;AAEF,MAAME,YAAY,GAAG,YAAY;EAC7B;EACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,mCAAmC,EAAE;IACjEF,YAAY,EAAEG,YAAY,CAACC,OAAO,CAAC,cAAc;EACrD,CAAC,CAAC;;EAEF;EACAD,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;EAClDJ,YAAY,CAACE,OAAO,CAAC,cAAc,EAAEJ,QAAQ,CAACK,IAAI,CAACN,YAAY,CAAC;;EAEhE;EACAJ,GAAG,CAACY,QAAQ,CAACV,OAAO,CAACW,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGR,QAAQ,CAACK,IAAI,CAACC,KAAK;;EAE9E;EACA,OAAON,QAAQ,CAACK,IAAI,CAACC,KAAK;AAC9B,CAAC;AAEDX,GAAG,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CACxBC,GAAG,IAAI;EACHA,GAAG,CAACf,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxE,OAAOS,GAAG;AACd,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}