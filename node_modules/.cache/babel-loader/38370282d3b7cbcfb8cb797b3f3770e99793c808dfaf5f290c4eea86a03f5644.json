{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useTranslation } from 'react-i18next';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Logo from './components/Logo/Logo';\nimport { Link } from 'react-router-dom';\nimport { setNewPassword, validateToken } from './api/auth';\nimport { ResetPassConfirm } from './components/ResetPassConfirm/ResetPassConfirm';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotFound = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: \"Page not found\"\n}, void 0, false);\n_c = NotFound;\nconst ResetPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [tokenChecked, setTokenChecked] = useState('Loading');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    token\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    dispatch(validateToken({\n      token\n    })).unwrap().then(res => {\n      if (res.status === 'OK') {\n        setTokenChecked(true);\n      } else {\n        setTokenChecked(false);\n      }\n    }).catch(() => setTokenChecked(false));\n  }, []);\n  function onResetPassword() {\n    if (password === confirmPassword) {\n      dispatch(setNewPassword({\n        password,\n        token\n      })).unwrap().then(res => {\n        if (res.status === 'OK') {\n          navigate('/login');\n        }\n      });\n    }\n  }\n  if (tokenChecked === 'Loading') {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n  if (tokenChecked === false) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page doesn't exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Logo\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg_btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg_light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg_light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg_light_active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"restore_title\",\n          children: t('create_new_pass')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: t('new_pass'),\n            className: \"password_confirm\",\n            id: \"password\",\n            type: \"password\",\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: t('check_pass'),\n            className: \"password_confirm\",\n            id: \"confirmPassword\",\n            type: \"password\",\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setConfirmPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reg_submit\",\n            type: \"button\",\n            onClick: onResetPassword,\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   <label htmlFor='password'>New password</label>\n  //   <input id=\"password\" type=\"password\" onChange={({target}) => setPassword(target.value)}/> \n  //   <label htmlFor='confirmPassword'>Confirm password</label>\n  //   <input id=\"confirmPassword\" type=\"password\" onChange={({target}) => setConfirmPassword(target.value)}/>\n  //   <button type=\"button\" onClick={onResetPassword}>Reset password</button>\n  // </div>\n  ;\n};\n_s(ResetPassword, \"WLHCDSq8ote5qep8aCdCKRigOQI=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useTranslation];\n});\n_c2 = ResetPassword;\nfunction App() {\n  _s2();\n  const {\n    isLogged,\n    user\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isLogged ? LOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 46\n      }, this)) : UNLOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 48\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth/reset-password/:token\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"qqNwl2PfqmPffLgA4qvA/x4KsWg=\", false, function () {\n  return [useSelector];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NotFound\");\n$RefreshReg$(_c2, \"ResetPassword\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","useParams","Main","useDispatch","useSelector","LOGGED_ROUTES","UNLOGGED_ROUTES","ToastContainer","useTranslation","PublicApi","useEffect","useState","axios","Header","Logo","Link","setNewPassword","validateToken","ResetPassConfirm","NotFound","ResetPassword","dispatch","navigate","tokenChecked","setTokenChecked","password","setPassword","confirmPassword","setConfirmPassword","token","t","unwrap","then","res","status","catch","onResetPassword","target","value","App","isLogged","user","state","auth","map","item","index","path","element"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js"],"sourcesContent":["import './App.css';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useTranslation } from 'react-i18next';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header'\nimport Logo from './components/Logo/Logo';\nimport { Link } from 'react-router-dom';\nimport { setNewPassword, validateToken } from './api/auth';\nimport { ResetPassConfirm } from './components/ResetPassConfirm/ResetPassConfirm';\n\nconst NotFound = () => (<>Page not found</>);\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [tokenChecked, setTokenChecked] = useState('Loading');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {token} = useParams();\n  const {t} = useTranslation()\n  \n  useEffect(() => {\n    dispatch(validateToken({token}))\n    .unwrap()\n    .then((res) => {\n      if (res.status === 'OK') {\n        setTokenChecked(true);\n      }\n      else {\n        setTokenChecked(false);\n      }\n    })\n    .catch(() => setTokenChecked(false));\n  }, []);\n\n  function onResetPassword() {\n    if (password === confirmPassword) {\n      dispatch(setNewPassword({password, token}))\n      .unwrap()\n      .then((res) => {\n        if (res.status === 'OK') {\n          navigate('/login');\n        }\n      })\n    }\n  }\n\n  if (tokenChecked === 'Loading') {\n    return (<h1>Loading...</h1>);\n  }\n  if (tokenChecked === false) {\n    return (<h1>Page doesn't exist</h1>);\n  }\n \n  return(\n    <div className=\"Login\">\n    <div className='header'>\n    <Header/>\n    </div>\n    <div className='Logo'>\n      <Logo/>\n      </div>\n      <div className='content'>\n      <div className=\"reg\">\n  \n            <div className='reg_btns'>\n                <div className='reg_light'></div>\n                <div className='reg_light'></div>\n                <div className='reg_light_active'></div>\n  \n            </div>\n            <h1 className='restore_title'>{t('create_new_pass')}</h1>\n             <div>\n     <label htmlFor='password'></label>\n       <input placeholder={t('new_pass')} className='password_confirm' id=\"password\" type=\"password\" onChange={({target}) => setPassword(target.value)}/> \n       <label htmlFor='confirmPassword'></label>\n       <input placeholder={t('check_pass')} className='password_confirm' id=\"confirmPassword\" type=\"password\" onChange={({target}) => setConfirmPassword(target.value)}/>\n       <button className='reg_submit' type=\"button\" onClick={onResetPassword}>Reset password</button>\n     </div>\n        </div>\n  \n  \n      </div>\n  \n  \n     \n  </div>\n    // <div>\n    //   <label htmlFor='password'>New password</label>\n    //   <input id=\"password\" type=\"password\" onChange={({target}) => setPassword(target.value)}/> \n    //   <label htmlFor='confirmPassword'>Confirm password</label>\n    //   <input id=\"confirmPassword\" type=\"password\" onChange={({target}) => setConfirmPassword(target.value)}/>\n    //   <button type=\"button\" onClick={onResetPassword}>Reset password</button>\n    // </div>\n  );\n}\n\nfunction App() {\n  const { isLogged, user } = useSelector(state => state.auth);\n  return (\n    <div className=\"App\">   \n      <Routes>\n        <Route path='/' element={<Main/>} />\n        {\n          isLogged ?\n          LOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n          :\n          UNLOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n        }\n        {\n\n        }\n\n        <Route path=\"/auth/reset-password/:token\" element={<ResetPassword />}/>  \n         {/* <Route path=\"/auth/reset-password/:token\" element={<ResetPassConfirm />}/>  */}\n\n        <Route path=\"/*\" element={<NotFound />}/>\n      </Routes>\n      <ToastContainer/>\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}