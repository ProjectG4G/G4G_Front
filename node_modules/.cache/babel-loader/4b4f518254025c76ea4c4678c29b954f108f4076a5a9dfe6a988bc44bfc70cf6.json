{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\nimport AuthService from \"../auth/authServices\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport const signupUser = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    password2,\n    email,\n    password,\n    first_name,\n    last_name\n  } = _ref;\n  try {\n    const response = await fetch(\"http://34.159.231.164/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"OPTIONS\"\n      },\n      body: JSON.stringify({\n        password2,\n        email,\n        password,\n        first_name,\n        last_name\n      })\n    });\n    let data = await response.json();\n    console.log(\"data\", data);\n    if (response.status === 200) {\n      localStorage.setItem(\"token\", data.token);\n      return {\n        ...data\n      };\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log(\"Error\", e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\n\n// export const register = createAsyncThunk(\n//   \"auth/register\",\n//   async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n//     try {\n//       const response = await AuthService.register(password2, email, password,first_name,last_name);\n//       thunkAPI.dispatch(setMessage(response.data.message));\n//       console.log(response.data)\n//       return response.data;\n//     } catch (error) {\n//       const message =\n//         (error.response &&\n//           error.response.data &&\n//           error.response.data.message) ||\n//         error.message ||\n//         error.toString();\n//       thunkAPI.dispatch(setMessage(message));\n//       return thunkAPI.rejectWithValue();\n//     }\n//   }\n// );\n\nexport const login = createAsyncThunk(\"auth/login\", async (_ref2, thunkAPI) => {\n  let {\n    email,\n    password\n  } = _ref2;\n  try {\n    const data = await AuthService.login(email, password);\n    return {\n      user: data\n    };\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await AuthService.logout();\n});\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [signupUser.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [signupUser.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoggedIn = true;\n      state.user = action.payload.user;\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    }\n  }\n});\nconst {\n  reducer\n} = authSlice;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","setMessage","AuthService","user","JSON","parse","localStorage","getItem","signupUser","thunkAPI","password2","email","password","first_name","last_name","response","fetch","method","headers","Accept","body","stringify","data","json","console","log","status","setItem","token","rejectWithValue","e","login","error","message","toString","dispatch","logout","initialState","isLoggedIn","authSlice","name","extraReducers","fulfilled","state","action","rejected","payload","reducer"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\n\nimport AuthService from \"../auth/authServices\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n\nexport const signupUser = createAsyncThunk(\n    \"auth/register\",\n    async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n      try {\n        const response = await fetch(\n          \"http://34.159.231.164/api/auth/register\",\n          \n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\" : \"*\",\n              \"Access-Control-Allow-Methods\": \"OPTIONS\"\n\n            },\n            body: JSON.stringify({\n                password2,\n              email,\n              password,\n              first_name,\n              last_name\n            }),\n          }\n        )\n        let data = await response.json()\n        console.log(\"data\", data)\n        if (response.status === 200) {\n          localStorage.setItem(\"token\", data.token)\n          return { ...data }\n        } else {\n          return thunkAPI.rejectWithValue(data)\n        }\n      } catch (e) {\n        console.log(\"Error\", e.response.data)\n        return thunkAPI.rejectWithValue(e.response.data)\n      }\n    }\n  )\n\n// export const register = createAsyncThunk(\n//   \"auth/register\",\n//   async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n//     try {\n//       const response = await AuthService.register(password2, email, password,first_name,last_name);\n//       thunkAPI.dispatch(setMessage(response.data.message));\n//       console.log(response.data)\n//       return response.data;\n//     } catch (error) {\n//       const message =\n//         (error.response &&\n//           error.response.data &&\n//           error.response.data.message) ||\n//         error.message ||\n//         error.toString();\n//       thunkAPI.dispatch(setMessage(message));\n//       return thunkAPI.rejectWithValue();\n//     }\n//   }\n// );\n\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ email, password }, thunkAPI) => {\n      try {\n        const data = await AuthService.login(email, password);\n        return { user: data };\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue();\n      }\n    }\n  );\n\n  export const logout = createAsyncThunk(\"auth/logout\", async () => {\n    await AuthService.logout();\n  });\n\n  const initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\n\n  const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n      [signupUser.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [signupUser.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [login.fulfilled]: (state, action) => {\n        state.isLoggedIn = true;\n        state.user = action.payload.user;\n      },\n      [login.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n      [logout.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n    },\n  });\n  \n  const { reducer } = authSlice;\n  export default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}