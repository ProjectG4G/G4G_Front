{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\n\n// export const login = createAsyncThunk(\n//     'auth/login',\n//     async (form, {rejectWithValue}) => {\n//         try {\n//             const response = await API.post('auth/login/', form);\n//             console.log('Login response: ', response.data);\n//             return response.data;\n//         } catch (err) {\n//             return rejectWithValue(err.response.data.message);\n\n//         }\n//     }\n// );\nexport const login = createAsyncThunk(\"auth/login\", async (_ref, thunkAPI) => {\n  let {\n    form\n  } = _ref;\n  try {\n    const response = await API.post('auth/login/', form);\n    console.log('Login response: ', response.data);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","login","thunkAPI","form","response","post","console","log","data","error","message","toString","dispatch","setMessage","rejectWithValue"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/api/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\n\n// export const login = createAsyncThunk(\n//     'auth/login',\n//     async (form, {rejectWithValue}) => {\n//         try {\n//             const response = await API.post('auth/login/', form);\n//             console.log('Login response: ', response.data);\n//             return response.data;\n//         } catch (err) {\n//             return rejectWithValue(err.response.data.message);\n            \n//         }\n//     }\n// );\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ form }, thunkAPI) => {\n      try {\n        const response = await API.post('auth/login/', form);\n        console.log('Login response: ', response.data);\n        return response.data;\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue();\n      }\n    }\n  );"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,QAAQ,OAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CACjC,YAAY,EACZ,aAAiBG,QAAQ,KAAK;EAAA,IAAvB;IAAEC;EAAK,CAAC;EACb,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACpDG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC9C,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACL,QAAQ,IACbK,KAAK,CAACL,QAAQ,CAACI,IAAI,IACnBC,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,OAAO,IAC7BD,KAAK,CAACC,OAAO,IACbD,KAAK,CAACE,QAAQ,EAAE;IAClBT,QAAQ,CAACU,QAAQ,CAACC,UAAU,CAACH,OAAO,CAAC,CAAC;IACtC,OAAOR,QAAQ,CAACY,eAAe,EAAE;EACnC;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}