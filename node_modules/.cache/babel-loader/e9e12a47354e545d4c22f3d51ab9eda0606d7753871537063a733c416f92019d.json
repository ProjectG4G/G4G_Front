{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\nimport axios from 'axios';\n\n// export const updateUser = createAsyncThunk(\n//   'users/updateUser',\n//   async (_,thunkAPI) => {\n//     try{\n//         let userId = localStorage.getItem('userID')\n//         const response = await PublicApi.get(`/auth/users/${userId}`);\n//         console.log(response.data)\n//         return response.data;\n//     }\n//     catch (err) {\n//         return thunkAPI.rejectWithValue(err.response.data.message);            \n//     }\n\n//   }\n// );\n//   export const updateUser = createAsyncThunk(\n//     \"user/updateUser\",\n//     async ({userData},{ rejectWithValue }) => {\n//       try {\n//         const userID = localStorage.getItem(\"userID\");\n\n//         const response = await API.patch(`auth/users/${userID}/`,userData);  \n//         console.log(response.data)\n\n//         return response.data;\n//       } catch (error) {\n//         return rejectWithValue(error.response.data);\n//       }\n//     }\n//   );\nexport const updateUser = createAsyncThunk(\"user/updateUser\", async (_ref, _ref2) => {\n  let {\n    userData\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const userID = localStorage.getItem(\"userID\");\n    const formData = new FormData();\n    formData.append(\"first_name\", userData.first_name);\n    formData.append(\"last_name\", userData.last_name);\n    formData.append(\"email\", userData.email);\n    formData.append(\"old_password\", userData.oldPassword);\n    formData.append(\"new_password\", userData.password);\n    formData.append(\"photo\", userData.photo);\n    const response = await API.patch(`auth/users/${userID}/`, userData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","PublicApi","axios","updateUser","userData","rejectWithValue","userID","localStorage","getItem","formData","FormData","append","first_name","last_name","email","oldPassword","password","photo","response","patch","headers","console","log","data","error"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/user.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\n\nimport axios from 'axios';\n\n// export const updateUser = createAsyncThunk(\n//   'users/updateUser',\n//   async (_,thunkAPI) => {\n//     try{\n//         let userId = localStorage.getItem('userID')\n//         const response = await PublicApi.get(`/auth/users/${userId}`);\n//         console.log(response.data)\n//         return response.data;\n//     }\n//     catch (err) {\n//         return thunkAPI.rejectWithValue(err.response.data.message);            \n//     }\n\n//   }\n// );\n//   export const updateUser = createAsyncThunk(\n//     \"user/updateUser\",\n//     async ({userData},{ rejectWithValue }) => {\n//       try {\n//         const userID = localStorage.getItem(\"userID\");\n  \n//         const response = await API.patch(`auth/users/${userID}/`,userData);  \n//         console.log(response.data)\n\n//         return response.data;\n//       } catch (error) {\n//         return rejectWithValue(error.response.data);\n//       }\n//     }\n//   );\n  export const updateUser = createAsyncThunk(\n    \"user/updateUser\",\n    async ({ userData }, { rejectWithValue }) => {\n      try {\n        const userID = localStorage.getItem(\"userID\");\n\n        const formData = new FormData();\n        formData.append(\"first_name\", userData.first_name);\n        formData.append(\"last_name\", userData.last_name);\n        formData.append(\"email\", userData.email);\n        formData.append(\"old_password\", userData.oldPassword);\n        formData.append(\"new_password\", userData.password);\n        formData.append(\"photo\", userData.photo); \n  \n        const response = await API.patch(`auth/users/${userID}/`, userData, {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        });\n  \n        console.log(response.data);\n        return response.data;\n      } catch (error) {\n        return rejectWithValue(error.response.data);\n      }\n    }\n  );\n  "],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,EAAEC,SAAS,QAAQ,OAAO;AAEtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,iBAAiB,EACjB,uBAA6C;EAAA,IAAtC;IAAEK;EAAS,CAAC;EAAA,IAAE;IAAEC;EAAgB,CAAC;EACtC,IAAI;IACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,QAAQ,CAACQ,UAAU,CAAC;IAClDH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEP,QAAQ,CAACS,SAAS,CAAC;IAChDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,QAAQ,CAACU,KAAK,CAAC;IACxCL,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACW,WAAW,CAAC;IACrDN,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACY,QAAQ,CAAC;IAClDP,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,QAAQ,CAACa,KAAK,CAAC;IAExC,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,KAAK,CAAE,cAAab,MAAO,GAAE,EAAEF,QAAQ,EAAE;MAClEgB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;IAC1B,OAAOL,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOnB,eAAe,CAACmB,KAAK,CAACN,QAAQ,CAACK,IAAI,CAAC;EAC7C;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}