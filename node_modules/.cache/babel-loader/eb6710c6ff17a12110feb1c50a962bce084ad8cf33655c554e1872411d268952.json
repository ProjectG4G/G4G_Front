{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotFound = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: \"Page not found\"\n}, void 0, false);\n_c = NotFound;\nconst ResetPassword = () => {\n  _s();\n  const [tokenChecked, setTokenChecked] = useState('Loading');\n  const {\n    token\n  } = useParams();\n  const checkToken = async () => {\n    const response = await PublicApi.post('auth/password_reset/validate_token', {\n      token\n    });\n    console.log(response);\n    if (response.data.status === 'OK') {\n      setTokenChecked(true);\n    } else {\n      console.log('Setting to false');\n      setTokenChecked(false);\n    }\n  };\n  useEffect(() => {\n    checkToken();\n  }, []);\n  if (tokenChecked === 'Loading') {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  if (tokenChecked === false) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page doesn't exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"password\",\n      children: \"New password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"confirmPassword\",\n      children: \"Confirm password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"confirmPassword\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Np5sbV+4+gneeyiDjWsCRWtvMM4=\", false, function () {\n  return [useParams];\n});\n_c2 = ResetPassword;\nfunction App() {\n  _s2();\n  const {\n    isLogged,\n    user\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), isLogged ? LOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 46\n      }, this)) : UNLOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 48\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth/reset-password/:token\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"qqNwl2PfqmPffLgA4qvA/x4KsWg=\", false, function () {\n  return [useSelector];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NotFound\");\n$RefreshReg$(_c2, \"ResetPassword\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["Route","Routes","useParams","Main","useSelector","LOGGED_ROUTES","UNLOGGED_ROUTES","ToastContainer","PublicApi","useEffect","useState","NotFound","ResetPassword","tokenChecked","setTokenChecked","token","checkToken","response","post","console","log","data","status","App","isLogged","user","state","auth","map","item","index","path","element"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js"],"sourcesContent":["import './App.css';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\n\nconst NotFound = () => (<>Page not found</>);\n\nconst ResetPassword = () => {\n  const [tokenChecked, setTokenChecked] = useState('Loading');\n  const {token} = useParams();\n  const checkToken = async () => {\n    const response = await PublicApi.post('auth/password_reset/validate_token', {token});\n    console.log(response);\n    if (response.data.status === 'OK') {\n      setTokenChecked(true);\n    }\n    else {\n      console.log('Setting to false');\n      setTokenChecked(false);\n    }\n  }\n  useEffect(() => {\n    checkToken();\n  }, []);\n  if (tokenChecked === 'Loading') {\n    return (<h1>Loading...</h1>);\n  }\n  if (tokenChecked === false) {\n    return (<h1>Page doesn't exist</h1>);\n  }\n  return(\n    <div>\n      <label for=\"password\">New password</label>\n      <input id=\"password\" type=\"password\"/> \n      <label for=\"confirmPassword\">Confirm password</label>\n      <input id=\"confirmPassword\" type=\"password\"/>\n    </div>\n  );\n}\n\nfunction App() {\n  const { isLogged, user } = useSelector(state => state.auth);\n  return (\n    <div className=\"App\">   \n      <Routes>\n        <Route path='/' element={<Main/>} />\n        {\n          isLogged ?\n          LOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n          :\n          UNLOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n        }\n        {\n\n        }\n        <Route path=\"/auth/reset-password/:token\" element={<ResetPassword />}/>\n        <Route path=\"/*\" element={<NotFound />}/>\n      </Routes>\n      <ToastContainer/>\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}