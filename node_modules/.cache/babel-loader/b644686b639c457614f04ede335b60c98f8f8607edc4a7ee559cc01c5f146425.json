{"ast":null,"code":"// import {  createSlice } from '@reduxjs/toolkit';\n// import axios from 'axios';\n// import { createUser } from '../../api/user';\n\n// const initialState = {\n//     users: [],\n//     status: 'idle',\n//     error: null,\n//   };\n\n//   const addUsersSlice = createSlice({\n//     name: 'users',\n//     initialState,\n//     reducers: {},\n//     extraReducers: (builder) => {\n//       builder\n//         .addCase(createUser.pending, (state) => {\n//           state.status = 'loading';\n//         })\n//         .addCase(createUser.fulfilled, (state, action) => {\n//           state.status = 'succeeded';\n//           state.users.push(action.payload);\n//         })\n//         .addCase(createUser.rejected, (state, action) => {\n//           state.status = 'failed';\n//           state.error = action.error.message;\n//         });\n//     },\n//   });\n\n//   export default addUsersSlice","map":{"version":3,"names":[],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/redux/slices/addUser.js"],"sourcesContent":["// import {  createSlice } from '@reduxjs/toolkit';\n// import axios from 'axios';\n// import { createUser } from '../../api/user';\n\n// const initialState = {\n//     users: [],\n//     status: 'idle',\n//     error: null,\n//   };\n\n\n//   const addUsersSlice = createSlice({\n//     name: 'users',\n//     initialState,\n//     reducers: {},\n//     extraReducers: (builder) => {\n//       builder\n//         .addCase(createUser.pending, (state) => {\n//           state.status = 'loading';\n//         })\n//         .addCase(createUser.fulfilled, (state, action) => {\n//           state.status = 'succeeded';\n//           state.users.push(action.payload);\n//         })\n//         .addCase(createUser.rejected, (state, action) => {\n//           state.status = 'failed';\n//           state.error = action.error.message;\n//         });\n//     },\n//   });\n\n//   export default addUsersSlice"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}