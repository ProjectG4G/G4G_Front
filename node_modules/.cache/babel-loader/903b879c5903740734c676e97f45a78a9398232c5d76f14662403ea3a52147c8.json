{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\nimport AuthService from \"../auth/authServices\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport const signupUser = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    password2,\n    email,\n    password,\n    first_name,\n    last_name,\n    phone_number = \"\",\n    region,\n    district\n  } = _ref;\n  try {\n    const response = await fetch(\"http://34.159.231.164/api/auth/register/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n        //   'Access-Control-Allow-Origin': '*',\n        //   'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n        //   'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS',\n      },\n\n      body: JSON.stringify({\n        password2,\n        email,\n        password,\n        first_name,\n        last_name,\n        phone_number,\n        region,\n        district\n      })\n    });\n    let data = await response.json();\n    console.log(\"data\", data);\n    if (response.status === 200) {\n      localStorage.setItem(\"token\", data.token);\n      return {\n        ...data\n      };\n    } else {\n      console.log(response);\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (e) {\n    console.log(\"Error\", e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const register = createAsyncThunk(\"auth/register\", async (_ref2, thunkAPI) => {\n  let {\n    password2,\n    email,\n    password,\n    first_name,\n    last_name\n  } = _ref2;\n  try {\n    const response = await AuthService.register(password2, email, password, first_name, last_name);\n    thunkAPI.dispatch(setMessage(response.data.message));\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (_ref3, thunkAPI) => {\n  let {\n    email,\n    password\n  } = _ref3;\n  try {\n    const data = await AuthService.login(email, password);\n    // console.log(data)\n    return {\n      user: data\n    };\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await AuthService.logout();\n});\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [signupUser.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [signupUser.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoggedIn = true;\n      state.user = action.payload.user;\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    }\n  }\n});\nconst {\n  reducer\n} = authSlice;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","setMessage","AuthService","user","JSON","parse","localStorage","getItem","signupUser","thunkAPI","password2","email","password","first_name","last_name","phone_number","region","district","response","fetch","method","headers","Accept","body","stringify","data","json","console","log","status","setItem","token","rejectWithValue","e","register","dispatch","message","error","toString","login","logout","initialState","isLoggedIn","authSlice","name","extraReducers","fulfilled","state","action","rejected","payload","reducer"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\n\nimport AuthService from \"../auth/authServices\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n\nexport const signupUser = createAsyncThunk(\n    \"auth/register\",\n    async ({ password2, email, password,first_name,last_name,phone_number = \"\", region,district }, thunkAPI) => {\n      try {\n        const response = await fetch(\n          \"http://34.159.231.164/api/auth/register/\",\n          \n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            //   'Access-Control-Allow-Origin': '*',\n            //   'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n            //   'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS',\n\n            },\n            body: JSON.stringify({\n                password2,\n              email,\n              password,\n              first_name,\n              last_name,\n              phone_number,\n               region,\n               district\n            }),\n          }\n        )\n        let data = await response.json()\n        console.log(\"data\", data)\n        if (response.status === 200) {\n          localStorage.setItem(\"token\", data.token)\n          return { ...data }\n        } else {\n            console.log(response)\n          return thunkAPI.rejectWithValue(data)\n        }\n      } catch (e) {\n        console.log(\"Error\", e.response.data)\n        return thunkAPI.rejectWithValue(e.response.data)\n      }\n    }\n  )\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n    try {\n      const response = await AuthService.register(password2, email, password,first_name,last_name);\n      thunkAPI.dispatch(setMessage(response.data.message));\n      console.log(response.data)\n      return response.data;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      thunkAPI.dispatch(setMessage(message));\n      return thunkAPI.rejectWithValue();\n    }\n  }\n);\n\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ email, password }, thunkAPI) => {\n      try {\n        const data = await AuthService.login(email, password);\n        // console.log(data)\n        return { user: data };\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue();\n      }\n    }\n  );\n\n  export const logout = createAsyncThunk(\"auth/logout\", async () => {\n    await AuthService.logout();\n  });\n\n  const initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\n\n  const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n      [signupUser.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [signupUser.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [login.fulfilled]: (state, action) => {\n        state.isLoggedIn = true;\n        state.user = action.payload.user;\n      },\n      [login.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n      [logout.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n    },\n  });\n  \n  const { reducer } = authSlice;\n  export default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}