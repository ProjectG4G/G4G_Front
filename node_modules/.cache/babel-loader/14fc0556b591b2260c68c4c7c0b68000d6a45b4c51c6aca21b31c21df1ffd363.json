{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LoginView } from '../components/LoginView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit\n  } = useForm({\n    mode: \"onChange\"\n  });\n  function handleFormChange(_ref) {\n    let {\n      target\n    } = _ref;\n    setForm(prev => ({\n      ...prev,\n      [target.name]: target.value\n    }));\n  }\n  ;\n  function handleFormSubmit() {\n    console.log('Submit!');\n    console.log(form);\n  }\n  const emailProps = register(\"email\", {\n    required: \"поле обязательно к заполнению\",\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"напишите правильный email\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(LoginView, {\n    form: form,\n    onInputChange: handleFormChange,\n    onFormSubmit: handleFormSubmit,\n    emailProps: emailProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"NQK5sadkKYKKkkAov8WTfPiL1x4=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useForm","LoginView","Login","form","setForm","email","password","register","formState","errors","isValid","handleSubmit","mode","handleFormChange","target","prev","name","value","handleFormSubmit","console","log","emailProps","required","pattern","message"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Login.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LoginView } from '../components/LoginView';\n\nexport function Login() {\n    const [form, setForm] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {\n        register,\n        formState: { errors, isValid },\n        handleSubmit\n    } = useForm({mode: \"onChange\"});\n\n    function handleFormChange({target}) {\n        setForm(prev => ({...prev, [target.name]: target.value}));\n    };\n\n    function handleFormSubmit() {\n        console.log('Submit!');\n        console.log(form);\n    }\n\n    const emailProps = register(\"email\", {\n        required: \"поле обязательно к заполнению\",\n        pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: \"напишите правильный email\",\n        }\n    });\n\n    return (\n        <LoginView \n            form={form} \n            onInputChange={handleFormChange} \n            onFormSubmit={handleFormSubmit}\n            emailProps={emailProps}/>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,QAAQ,yBAAyB;AAAC;AAEpD,OAAO,SAASC,KAAK,GAAG;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC7BM,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM;IACFC,QAAQ;IACRC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAQ,CAAC;IAC9BC;EACJ,CAAC,GAAGX,OAAO,CAAC;IAACY,IAAI,EAAE;EAAU,CAAC,CAAC;EAE/B,SAASC,gBAAgB,OAAW;IAAA,IAAV;MAACC;IAAM,CAAC;IAC9BV,OAAO,CAACW,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,CAACE,IAAI,GAAGF,MAAM,CAACG;IAAK,CAAC,CAAC,CAAC;EAC7D;EAAC;EAED,SAASC,gBAAgB,GAAG;IACxBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC;EACrB;EAEA,MAAMkB,UAAU,GAAGd,QAAQ,CAAC,OAAO,EAAE;IACjCe,QAAQ,EAAE,+BAA+B;IACzCC,OAAO,EAAE;MACLN,KAAK,EAAE,sJAAsJ;MAC7JO,OAAO,EAAE;IACb;EACJ,CAAC,CAAC;EAEF,oBACI,QAAC,SAAS;IACN,IAAI,EAAErB,IAAK;IACX,aAAa,EAAEU,gBAAiB;IAChC,YAAY,EAAEK,gBAAiB;IAC/B,UAAU,EAAEG;EAAW;IAAA;IAAA;IAAA;EAAA,QAAE;AAErC;AAAC,GApCenB,KAAK;EAAA,QAUbF,OAAO;AAAA;AAAA,KAVCE,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}