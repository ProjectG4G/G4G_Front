{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { LoginView } from '../components/LoginView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const {\n    language\n  } = useSelector(state => state.general);\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit\n  } = useForm({\n    mode: \"onChange\"\n  });\n  function handleFormSubmit(data) {\n    console.log('Submit!', data);\n  }\n  const emailProps = register(\"email\", {\n    required: \"поле обязательно к заполнению\",\n    pattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: \"напишите правильный email\"\n    }\n  });\n  const passwordProps = register(\"password\", {\n    required: \"поле обязательно к заполнению\",\n    minLength: {\n      value: 8,\n      message: \"8 минимум  символов\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(LoginView, {\n    onFormSubmit: handleSubmit(handleFormSubmit),\n    emailProps: emailProps,\n    passwordProps: passwordProps,\n    errors: errors,\n    isValid: isValid,\n    language: language\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"qKRLgmyruSzhRKlU9hIV2LpDHk8=\", false, function () {\n  return [useSelector, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useForm","useSelector","LoginView","Login","language","state","general","register","formState","errors","isValid","handleSubmit","mode","handleFormSubmit","data","console","log","emailProps","required","pattern","value","message","passwordProps","minLength"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/pages/Login.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { LoginView } from '../components/LoginView';\n\nexport function Login() {\n    const { language } = useSelector(state => state.general);\n    const {\n        register,\n        formState: { errors, isValid },\n        handleSubmit\n    } = useForm({mode: \"onChange\"});\n\n    function handleFormSubmit(data) {\n        console.log('Submit!',data);\n    }\n\n    const emailProps = register(\"email\", {\n        required: \"поле обязательно к заполнению\",\n        pattern: {\n            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n            message: \"напишите правильный email\",\n        }\n    });\n\n    const passwordProps = register(\"password\", {\n        required: \"поле обязательно к заполнению\",\n        minLength: {\n            value: 8,\n            message: \"8 минимум  символов\",\n        }\n    });\n\n\n\n\n    return (\n        <LoginView \n            onFormSubmit={handleSubmit(handleFormSubmit)}\n            emailProps={emailProps}\n            passwordProps={passwordProps}\n            errors={errors}\n            isValid={isValid}\n            language={language}/>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,yBAAyB;AAAC;AAEpD,OAAO,SAASC,KAAK,GAAG;EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;EACxD,MAAM;IACFC,QAAQ;IACRC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAQ,CAAC;IAC9BC;EACJ,CAAC,GAAGX,OAAO,CAAC;IAACY,IAAI,EAAE;EAAU,CAAC,CAAC;EAE/B,SAASC,gBAAgB,CAACC,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,IAAI,CAAC;EAC/B;EAEA,MAAMG,UAAU,GAAGV,QAAQ,CAAC,OAAO,EAAE;IACjCW,QAAQ,EAAE,+BAA+B;IACzCC,OAAO,EAAE;MACLC,KAAK,EAAE,sJAAsJ;MAC7JC,OAAO,EAAE;IACb;EACJ,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGf,QAAQ,CAAC,UAAU,EAAE;IACvCW,QAAQ,EAAE,+BAA+B;IACzCK,SAAS,EAAE;MACPH,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACb;EACJ,CAAC,CAAC;EAKF,oBACI,QAAC,SAAS;IACN,YAAY,EAAEV,YAAY,CAACE,gBAAgB,CAAE;IAC7C,UAAU,EAAEI,UAAW;IACvB,aAAa,EAAEK,aAAc;IAC7B,MAAM,EAAEb,MAAO;IACf,OAAO,EAAEC,OAAQ;IACjB,QAAQ,EAAEN;EAAS;IAAA;IAAA;IAAA;EAAA,QAAE;AAEjC;AAAC,GAxCeD,KAAK;EAAA,QACIF,WAAW,EAK5BD,OAAO;AAAA;AAAA,KANCG,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}