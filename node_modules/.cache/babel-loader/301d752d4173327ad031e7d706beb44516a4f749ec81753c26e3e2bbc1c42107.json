{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nexport const login = createAsyncThunk('auth/login', async (form, thunkAPI) => {\n  try {\n    const response = await log(form);\n    console.log('Login response: ', response.data);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});\nconst log = form => {\n  return API.post(\"auth/login/\", {\n    form\n  }).then(response => {\n    console.log(response);\n    if (response.data.access) {\n      localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n    }\n    return response.data;\n  });\n};\n\n//   export const login = createAsyncThunk(\n//     \"auth/login\",\n//     async ({ email, password }, thunkAPI) => {\n//       try {\n//         const data = await AuthService.login(email, password);\n//         return { user: data };\n//       } catch (error) {\n//         const message =\n//           (error.response &&\n//             error.response.data &&\n//             error.response.data.message) ||\n//           error.message ||\n//           error.toString();\n//         thunkAPI.dispatch(setMessage(message));\n//         return thunkAPI.rejectWithValue();\n//       }\n//     }\n//   );\n\n// const login = (email, password) => {\n//     return API\n//       .post(\"auth/login/\", {\n//         email,\n//         password,\n//       })\n//       .then((response) => {\n//           console.log(response)\n//         if (response.data.access) {\n//           localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n//         }\n\n//         return response.data;\n//       });\n//   };","map":{"version":3,"names":["createAsyncThunk","API","login","form","thunkAPI","response","log","console","data","err","rejectWithValue","message","post","then","access","localStorage","setItem","JSON","stringify"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/api/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (form, thunkAPI) => {\n        try {\n            const response = await log(form);\n            console.log('Login response: ', response.data);\n            return response.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);\nconst log = (form) => {\n    return API\n      .post(\"auth/login/\", {\n      form\n      })\n      .then((response) => {\n          console.log(response)\n        if (response.data.access) {\n          localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n        }\n  \n        return response.data;\n      });\n  };\n\n//   export const login = createAsyncThunk(\n//     \"auth/login\",\n//     async ({ email, password }, thunkAPI) => {\n//       try {\n//         const data = await AuthService.login(email, password);\n//         return { user: data };\n//       } catch (error) {\n//         const message =\n//           (error.response &&\n//             error.response.data &&\n//             error.response.data.message) ||\n//           error.message ||\n//           error.toString();\n//         thunkAPI.dispatch(setMessage(message));\n//         return thunkAPI.rejectWithValue();\n//       }\n//     }\n//   );\n\n// const login = (email, password) => {\n//     return API\n//       .post(\"auth/login/\", {\n//         email,\n//         password,\n//       })\n//       .then((response) => {\n//           console.log(response)\n//         if (response.data.access) {\n//           localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n//         }\n  \n//         return response.data;\n//       });\n//   };"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CACjC,YAAY,EACZ,OAAOG,IAAI,EAAEC,QAAQ,KAAK;EACtB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACH,IAAI,CAAC;IAChCI,OAAO,CAACD,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAACG,IAAI,CAAC;IAC9C,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOL,QAAQ,CAACM,eAAe,CAACD,GAAG,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,CAAC;EAC9D;AACJ,CAAC,CACJ;AACD,MAAML,GAAG,GAAIH,IAAI,IAAK;EAClB,OAAOF,GAAG,CACPW,IAAI,CAAC,aAAa,EAAE;IACrBT;EACA,CAAC,CAAC,CACDU,IAAI,CAAER,QAAQ,IAAK;IAChBE,OAAO,CAACD,GAAG,CAACD,QAAQ,CAAC;IACvB,IAAIA,QAAQ,CAACG,IAAI,CAACM,MAAM,EAAE;MACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACG,IAAI,CAACM,MAAM,CAAC,CAAC;IACrE;IAEA,OAAOT,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC;AACN,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}