{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchData } from \"../../api/geo\";\nconst initialState = {\n  data: [],\n  status: \"idle\",\n  error: null\n};\nconst geoSlice = createSlice({\n  name: \"data\",\n  initialState,\n  reducers: {\n    setGeo: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.status = 'idle';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchData.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport const {\n  setGeo\n} = geoSlice.actions;\nexport default geoSlice;","map":{"version":3,"names":["createSlice","fetchData","initialState","data","status","error","geoSlice","name","reducers","setGeo","state","payload","extraReducers","builder","addCase","fulfilled","action","actions"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/redux/slices/geoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchData } from \"../../api/geo\";\n\nconst initialState =  {\n    data: [],\n    status: \"idle\",\n    error: null,\n  }\nconst geoSlice = createSlice({\n    name:  \"data\" ,\n    initialState,\n    reducers: {\n      setGeo: (state, {payload}) => {\n        state.status = 'idle'\n\n    }\n    },\n    extraReducers: (builder) => {\n      builder\n        .addCase(fetchData.fulfilled, (state, action) => {\n          return action.payload;\n        });\n    },\n  });\n  export const {\n    setGeo\n} = geoSlice.actions;  \n  export default geoSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,eAAe;AAEzC,MAAMC,YAAY,GAAI;EAClBC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AACH,MAAMC,QAAQ,GAAGN,WAAW,CAAC;EACzBO,IAAI,EAAG,MAAM;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAK,WAAgB;MAAA,IAAd;QAACC;MAAO,CAAC;MACvBD,KAAK,CAACN,MAAM,GAAG,MAAM;IAEzB;EACA,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/C,OAAOA,MAAM,CAACL,OAAO;IACvB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EACXF;AACJ,CAAC,GAAGH,QAAQ,CAACW,OAAO;AAClB,eAAeX,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}