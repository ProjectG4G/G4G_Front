{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\nimport AuthService from \"../auth/authServices\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport const register = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    password2,\n    email,\n    password,\n    first_name,\n    last_name\n  } = _ref;\n  try {\n    const response = await AuthService.register(password2, email, password, first_name, last_name);\n    thunkAPI.dispatch(setMessage(response.data.message));\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (_ref2, thunkAPI) => {\n  let {\n    email,\n    password\n  } = _ref2;\n  try {\n    const data = await AuthService.login(email, password);\n    return {\n      user: data\n    };\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await AuthService.logout();\n});\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [register.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [register.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoggedIn = true;\n      state.user = action.payload.user;\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    }\n  }\n});\nexport const authRecucer = authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","setMessage","AuthService","user","JSON","parse","localStorage","getItem","register","thunkAPI","password2","email","password","first_name","last_name","response","dispatch","data","message","error","toString","rejectWithValue","login","logout","initialState","isLoggedIn","authSlice","name","extraReducers","fulfilled","state","action","rejected","payload","authRecucer","reducer"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\n\nimport AuthService from \"../auth/authServices\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n    try {\n      const response = await AuthService.register(password2, email, password,first_name,last_name);\n      thunkAPI.dispatch(setMessage(response.data.message));\n      return response.data;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      thunkAPI.dispatch(setMessage(message));\n      return thunkAPI.rejectWithValue();\n    }\n  }\n);\n\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ email, password }, thunkAPI) => {\n      try {\n        const data = await AuthService.login(email, password);\n        return { user: data };\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue();\n      }\n    }\n  );\n\n  export const logout = createAsyncThunk(\"auth/logout\", async () => {\n    await AuthService.logout();\n  });\n\n  const initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\n\n  const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n      [register.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [register.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [login.fulfilled]: (state, action) => {\n        state.isLoggedIn = true;\n        state.user = action.payload.user;\n      },\n      [login.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n      [logout.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n    },\n  });\n  \n  export const authRecucer = authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}