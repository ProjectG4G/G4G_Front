{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API, PublicApi } from \"./api\";\nimport jwt_decode from 'jwt-decode';\nexport const login = createAsyncThunk('auth/login', async (form, thunkAPI) => {\n  try {\n    var _jwt_decode;\n    const response = await PublicApi.post(`auth/login/`, form);\n    let token = response.data.access;\n    localStorage.setItem('token', token);\n    localStorage.setItem('refresh', response.data.refresh);\n    let userId = (_jwt_decode = jwt_decode(token)) === null || _jwt_decode === void 0 ? void 0 : _jwt_decode.user_id;\n    localStorage.setItem('userID', userId);\n    let userData = await API.get('auth/users/' + userId).then(res => res.data);\n    return {\n      ...response.data,\n      user: userData\n    };\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (form, thunkAPI) => {\n  try {\n    const response = await PublicApi.post(`auth/register/`, form);\n    console.log('Register response: ', response.data);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});\nexport const reset = createAsyncThunk('auth/reset', async (form, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await PublicApi.post(`auth/password_reset/`, form);\n    console.log('Reset response: ', response.data);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data.message);\n  }\n});\nexport const validateToken = createAsyncThunk('auth/validateToken', async (token, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await PublicApi.post('auth/password_reset/validate/', token);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data.message);\n  }\n});\nexport const setNewPassword = createAsyncThunk('auth/setNewPassword', async (token, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  try {\n    const response = await PublicApi.post('auth/password_reset/confirm/', token);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","PublicApi","jwt_decode","login","form","thunkAPI","response","post","token","data","access","localStorage","setItem","refresh","userId","user_id","userData","get","then","res","user","err","rejectWithValue","message","register","console","log","reset","validateToken","setNewPassword"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API, PublicApi } from \"./api\";\nimport jwt_decode from 'jwt-decode'\n\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (form, thunkAPI) => {\n        try {\n            const response = await PublicApi.post(`auth/login/`, form);\n            let token = response.data.access;\n            localStorage.setItem('token', token);\n            localStorage.setItem('refresh', response.data.refresh);\n\n            let userId = jwt_decode(token)?.user_id;\n            localStorage.setItem('userID', userId);\n\n            let userData = await API.get('auth/users/' + userId).then(res => res.data);\n            \n            return {...response.data, user: userData};\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (form, thunkAPI) => {\n        try {\n            const response = await PublicApi.post(`auth/register/`, form);\n            console.log('Register response: ', response.data);\n          \n            return response.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);\nexport const reset = createAsyncThunk(\n    'auth/reset',\n    async (form, {rejectWithValue}) => {\n        try {\n            const response = await PublicApi.post(`auth/password_reset/`, form);\n            console.log('Reset response: ', response.data);\n          \n            return response.data;\n        } catch (err) {\n            return rejectWithValue(err.response.data.message);            \n        }\n    }\n);\n\nexport const validateToken = createAsyncThunk(\n    'auth/validateToken',\n    async (token, {rejectWithValue}) => {\n        try {\n            const response = await PublicApi.post('auth/password_reset/validate/', token);\n            console.log(response.data);\n            return response.data;\n        } catch (err) {\n            return rejectWithValue(err.response.data.message);\n        }\n    }\n)\nexport const setNewPassword = createAsyncThunk(\n    'auth/setNewPassword',\n    async (token, {rejectWithValue}) => {\n        try {\n            const response = await PublicApi.post('auth/password_reset/confirm/', token);\n            console.log(response.data);\n            return response.data;\n        } catch (err) {\n            return rejectWithValue(err.response.data.message);\n        }\n    }\n)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}