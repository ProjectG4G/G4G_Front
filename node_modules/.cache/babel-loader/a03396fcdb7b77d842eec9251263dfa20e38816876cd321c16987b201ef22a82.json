{"ast":null,"code":"var _jsxFileName = \"/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useTranslation } from 'react-i18next';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport Logo from './components/AuthLogo/Logo';\nimport { Link } from 'react-router-dom';\nimport { setNewPassword, validateToken } from './api/auth';\nimport { ResetPassConfirm } from './components/ResetPassConfirm/ResetPassConfirm';\nimport { setLanguage } from './redux/slices/generalSlice';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotFound = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: \"Page not found\"\n}, void 0, false);\n_c = NotFound;\nfunction App() {\n  _s();\n  const {\n    isLogged,\n    user\n  } = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), isLogged ? LOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }, this)) : UNLOGGED_ROUTES.map((item, index) => /*#__PURE__*/_jsxDEV(Route, {\n        path: item.path,\n        element: item.element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 48\n      }, this)), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth/reset-password/:token\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassConfirm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qqNwl2PfqmPffLgA4qvA/x4KsWg=\", false, function () {\n  return [useSelector];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NotFound\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","useParams","Main","useDispatch","useSelector","LOGGED_ROUTES","UNLOGGED_ROUTES","ToastContainer","useTranslation","PublicApi","useEffect","useState","axios","Header","Logo","Link","setNewPassword","validateToken","ResetPassConfirm","setLanguage","NotFound","App","isLogged","user","state","auth","map","item","index","path","element"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport Main from './pages/Main.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOGGED_ROUTES, UNLOGGED_ROUTES } from './constants/routes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useTranslation } from 'react-i18next';\nimport { PublicApi } from './api/api';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header'\nimport Logo from './components/AuthLogo/Logo';\nimport { Link } from 'react-router-dom';\nimport { setNewPassword, validateToken } from './api/auth';\nimport { ResetPassConfirm } from './components/ResetPassConfirm/ResetPassConfirm';\nimport { setLanguage } from './redux/slices/generalSlice';\n\nconst NotFound = () => (<>Page not found</>);\n\n\nfunction App() {\n  const { isLogged, user } = useSelector(state => state.auth);\n  return (\n    <div className=\"App\">   \n      <Routes>\n        <Route path='/' element={<Main/>} />\n        {\n          isLogged ?\n          LOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n          :\n          UNLOGGED_ROUTES.map((item, index) => <Route key={index} path={item.path} element={item.element} />)\n        }\n        {\n\n        }\n\n        {/* <Route path=\"/auth/reset-password/:token\" element={<ResetPassword />}/>   */}\n         <Route path=\"/auth/reset-password/:token\" element={<ResetPassConfirm />}/> \n\n        <Route path=\"/*\" element={<NotFound />}/>\n      </Routes>\n      <ToastContainer/>\n  </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,SAASA,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACxE,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,eAAe,QAAQ,oBAAoB;AACnE,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,EAAEC,aAAa,QAAQ,YAAY;AAC1D,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,WAAW,QAAQ,6BAA6B;AAAC;AAAA;AAE1D,MAAMC,QAAQ,GAAG,mBAAO;EAAA,UAAE;AAAc,iBAAI;AAAC,KAAvCA,QAAQ;AAGd,SAASC,GAAG,GAAG;EAAA;EACb,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC3D,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,EAElCH,QAAQ,GACRjB,aAAa,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAK,QAAC,KAAK;QAAa,IAAI,EAAED,IAAI,CAACE,IAAK;QAAC,OAAO,EAAEF,IAAI,CAACG;MAAQ,GAA9CF,KAAK;QAAA;QAAA;QAAA;MAAA,QAA4C,CAAC,GAEjGtB,eAAe,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAK,QAAC,KAAK;QAAa,IAAI,EAAED,IAAI,CAACE,IAAK;QAAC,OAAO,EAAEF,IAAI,CAACG;MAAQ,GAA9CF,KAAK;QAAA;QAAA;QAAA;MAAA,QAA4C,CAAC,eAOpG,QAAC,KAAK;QAAC,IAAI,EAAC,6BAA6B;QAAC,OAAO,eAAE,QAAC,gBAAgB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eAE3E,QAAC,KAAK;QAAC,IAAI,EAAC,IAAI;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACT,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACf;AAER;AAAC,GAxBQP,GAAG;EAAA,QACiBjB,WAAW;AAAA;AAAA,MAD/BiB,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}