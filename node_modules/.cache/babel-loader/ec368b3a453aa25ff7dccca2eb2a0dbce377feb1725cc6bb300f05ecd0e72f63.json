{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nimport jwt_decode from 'jwt-decode';\nexport const login = createAsyncThunk('auth/login', async (form, thunkAPI) => {\n  try {\n    var _jwt_decode;\n    const response = await API.post(`auth/login/`, form);\n    let token = response.data.access;\n    let userId = (_jwt_decode = jwt_decode(token)) === null || _jwt_decode === void 0 ? void 0 : _jwt_decode.user_id;\n    let userData = await API.get('auth/users/' + userId).then(res => res.data);\n    return {\n      ...response.data,\n      user: userData\n    };\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (form, thunkAPI) => {\n  try {\n    const response = await API.post(`auth/login/`, form);\n    console.log('Login response: ', response.data);\n    let token = response.data.access;\n    let decoded = jwt_decode(token);\n    console.log(decoded);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","jwt_decode","login","form","thunkAPI","response","post","token","data","access","userId","user_id","userData","get","then","res","user","err","rejectWithValue","message","register","console","log","decoded"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/api/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nimport jwt_decode from 'jwt-decode'\n\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (form, thunkAPI) => {\n        try {\n            const response = await API.post(`auth/login/`, form);\n            let token = response.data.access\n            let userId = jwt_decode(token)?.user_id;\n            let userData = await API.get('auth/users/' + userId).then(res => res.data);\n            return {...response.data, user: userData};\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (form, thunkAPI) => {\n        try {\n            const response = await API.post(`auth/login/`, form);\n            console.log('Login response: ', response.data);\n            let token = response.data.access\n            let decoded = jwt_decode(token)\n            console.log(decoded)\n            return response.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message);            \n        }\n    }\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,QAAQ,OAAO;AAC3B,OAAOC,UAAU,MAAM,YAAY;AAGnC,OAAO,MAAMC,KAAK,GAAGH,gBAAgB,CACjC,YAAY,EACZ,OAAOI,IAAI,EAAEC,QAAQ,KAAK;EACtB,IAAI;IAAA;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAE,aAAY,EAAEH,IAAI,CAAC;IACpD,IAAII,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM;IAChC,IAAIC,MAAM,kBAAGT,UAAU,CAACM,KAAK,CAAC,gDAAjB,YAAmBI,OAAO;IACvC,IAAIC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,aAAa,GAAGH,MAAM,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACP,IAAI,CAAC;IAC1E,OAAO;MAAC,GAAGH,QAAQ,CAACG,IAAI;MAAEQ,IAAI,EAAEJ;IAAQ,CAAC;EAC7C,CAAC,CAAC,OAAOK,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAACD,GAAG,CAACZ,QAAQ,CAACG,IAAI,CAACW,OAAO,CAAC;EAC9D;AACJ,CAAC,CACJ;AAED,OAAO,MAAMC,QAAQ,GAAGrB,gBAAgB,CACpC,eAAe,EACf,OAAOI,IAAI,EAAEC,QAAQ,KAAK;EACtB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAE,aAAY,EAAEH,IAAI,CAAC;IACpDkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEjB,QAAQ,CAACG,IAAI,CAAC;IAC9C,IAAID,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM;IAChC,IAAIc,OAAO,GAAGtB,UAAU,CAACM,KAAK,CAAC;IAC/Bc,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IACpB,OAAOlB,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOS,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAACD,GAAG,CAACZ,QAAQ,CAACG,IAAI,CAACW,OAAO,CAAC;EAC9D;AACJ,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}