{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\nimport axios from 'axios';\n\n// export const updateUser = createAsyncThunk(\n//   'users/updateUser',\n//   async (_,thunkAPI) => {\n//     try{\n//         let userId = localStorage.getItem('userID')\n//         const response = await PublicApi.get(`/auth/users/${userId}`);\n//         console.log(response.data)\n//         return response.data;\n//     }\n//     catch (err) {\n//         return thunkAPI.rejectWithValue(err.response.data.message);            \n//     }\n\n//   }\n// );\nconst userId = localStorage.getItem('userId');\nexport const updateUser = createAsyncThunk('users/updateUser', async (_, thunkAPI) => {\n  try {\n    let userId = localStorage.getItem('userID');\n    const response = await PublicApi.get(`/auth/users/${userId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","API","PublicApi","axios","userId","localStorage","getItem","updateUser","_","thunkAPI","response","get","console","log","data","err","rejectWithValue","message"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/user.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\n\nimport axios from 'axios';\n\n// export const updateUser = createAsyncThunk(\n//   'users/updateUser',\n//   async (_,thunkAPI) => {\n//     try{\n//         let userId = localStorage.getItem('userID')\n//         const response = await PublicApi.get(`/auth/users/${userId}`);\n//         console.log(response.data)\n//         return response.data;\n//     }\n//     catch (err) {\n//         return thunkAPI.rejectWithValue(err.response.data.message);            \n//     }\n\n//   }\n// );\nconst userId = localStorage.getItem('userId');\n\nexport const updateUser = createAsyncThunk('users/updateUser', async (_,thunkAPI) => {\n    try {\n        let userId = localStorage.getItem('userID')\n        const response = await PublicApi.get(`/auth/users/${userId}`);\n        console.log(response.data)\n        return response.data;\n    }     catch (err) {\n        return thunkAPI.rejectWithValue(err.response.data.message);            \n    }\n  });"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,EAAEC,SAAS,QAAQ,OAAO;AAEtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;AAE7C,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CAAC,kBAAkB,EAAE,OAAOQ,CAAC,EAACC,QAAQ,KAAK;EACjF,IAAI;IACA,IAAIL,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,MAAMI,QAAQ,GAAG,MAAMR,SAAS,CAACS,GAAG,CAAE,eAAcP,MAAO,EAAC,CAAC;IAC7DQ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAK,OAAOC,GAAG,EAAE;IACd,OAAON,QAAQ,CAACO,eAAe,CAACD,GAAG,CAACL,QAAQ,CAACI,IAAI,CAACG,OAAO,CAAC;EAC9D;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}