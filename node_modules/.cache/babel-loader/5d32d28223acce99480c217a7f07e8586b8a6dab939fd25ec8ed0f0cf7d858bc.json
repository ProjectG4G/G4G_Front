{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\nimport axios from 'axios';\nexport const updateUser = createAsyncThunk(\"user/updateUser\", async (_ref, _ref2) => {\n  let {\n    userData\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const userID = localStorage.getItem(\"userID\");\n    const formData = new FormData();\n    formData.append(\"first_name\", userData.first_name);\n    formData.append(\"last_name\", userData.last_name);\n    formData.append(\"email\", userData.email);\n    formData.append(\"old_password\", userData.oldPassword);\n    formData.append(\"new_password\", userData.password);\n    formData.append(\"profile_picture\", userData.profile_picture); // Add user photo data\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        // Replace \"token\" with the key for your token in localStorage\n        \"Content-Type\": \"multipart/form-data\" // Set the Content-Type header for FormData\n      }\n    };\n\n    const response = await API.patch(`auth/users/${userID}/`, formData, config);\n    localStorage.setItem('user', JSON.stringify(response.data));\n    console.log(response.data);\n    window.location.reload();\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateUserById = createAsyncThunk('users/updateUserById', async _ref3 => {\n  let {\n    userId,\n    userData\n  } = _ref3;\n  try {\n    const formData = new FormData();\n    formData.append(\"first_name\", userData.first_name);\n    formData.append(\"last_name\", userData.last_name);\n    formData.append(\"email\", userData.email);\n    formData.append(\"old_password\", userData.oldPassword);\n    formData.append(\"new_password\", userData.password);\n    formData.append(\"profile_picture\", userData.profile_picture);\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const response = await API.patch(`auth/users/${userId}`, userData, config);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    throw Error('Failed to update user');\n  }\n});\nexport const fetchAllUsers = createAsyncThunk('users/fetchAll', async () => {\n  const response = await API.get('auth/users');\n  return response.data;\n});\nexport const deleteUserById = createAsyncThunk('users/deleteById', async userId => {\n  await API.delete(`auth/users/${userId}`);\n  return userId;\n});\nconst config = {\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    // Replace \"token\" with the key for your token in localStorage\n    \"Content-Type\": \"multipart/form-data\" // Set the Content-Type header for FormData\n  }\n};","map":{"version":3,"names":["createAsyncThunk","API","PublicApi","axios","updateUser","userData","rejectWithValue","userID","localStorage","getItem","formData","FormData","append","first_name","last_name","email","oldPassword","password","profile_picture","config","headers","Authorization","response","patch","setItem","JSON","stringify","data","console","log","window","location","reload","error","updateUserById","userId","Error","fetchAllUsers","get","deleteUserById","delete"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g/src/api/user.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API, PublicApi } from \"./api\";\n\nimport axios from 'axios';\n\n\n\nexport const updateUser = createAsyncThunk(\n  \"user/updateUser\",\n  async ({ userData }, { rejectWithValue }) => {\n    try {\n      const userID = localStorage.getItem(\"userID\");\n      const formData = new FormData();\n      formData.append(\"first_name\", userData.first_name);\n      formData.append(\"last_name\", userData.last_name);\n      formData.append(\"email\", userData.email);\n      formData.append(\"old_password\", userData.oldPassword);\n      formData.append(\"new_password\", userData.password);\n      formData.append(\"profile_picture\", userData.profile_picture); // Add user photo data\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Replace \"token\" with the key for your token in localStorage\n          \"Content-Type\": \"multipart/form-data\", // Set the Content-Type header for FormData\n        },\n      };\n\n      const response = await API.patch(`auth/users/${userID}/`, formData,config);\n      localStorage.setItem('user', JSON.stringify(response.data));\n\n      console.log(response.data);\n      window.location.reload()\n\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\nexport const updateUserById = createAsyncThunk('users/updateUserById', async ({ userId, userData }) => {\n  try {\n\n    const formData = new FormData();\n    formData.append(\"first_name\", userData.first_name);\n    formData.append(\"last_name\", userData.last_name);\n    formData.append(\"email\", userData.email);\n    formData.append(\"old_password\", userData.oldPassword);\n    formData.append(\"new_password\", userData.password);\n    formData.append(\"profile_picture\", userData.profile_picture);\n\n    const config = {\n      headers: {\n     \n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    const response = await API.patch(`auth/users/${userId}`, userData,config);\n    console.log(response.data);\n\n    return response.data;\n  } catch (error) {\n    throw Error('Failed to update user');\n  }\n});\n\nexport const fetchAllUsers = createAsyncThunk('users/fetchAll', async () => {\n  const response = await API.get('auth/users');\n  return response.data;\n});\n\n\nexport const deleteUserById = createAsyncThunk('users/deleteById', async (userId) => {\n  await API.delete(`auth/users/${userId}`);\n  return userId;\n});\n\n\n\nconst config = {\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Replace \"token\" with the key for your token in localStorage\n    \"Content-Type\": \"multipart/form-data\", // Set the Content-Type header for FormData\n  },\n};"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,GAAG,EAAEC,SAAS,QAAQ,OAAO;AAEtC,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,iBAAiB,EACjB,uBAA6C;EAAA,IAAtC;IAAEK;EAAS,CAAC;EAAA,IAAE;IAAEC;EAAgB,CAAC;EACtC,IAAI;IACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,QAAQ,CAACQ,UAAU,CAAC;IAClDH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEP,QAAQ,CAACS,SAAS,CAAC;IAChDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,QAAQ,CAACU,KAAK,CAAC;IACxCL,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACW,WAAW,CAAC;IACrDN,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACY,QAAQ,CAAC;IAClDP,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEP,QAAQ,CAACa,eAAe,CAAC,CAAC,CAAC;;IAE9D,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;QAAE;QAC1D,cAAc,EAAE,qBAAqB,CAAE;MACzC;IACF,CAAC;;IAED,MAAMa,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,KAAK,CAAE,cAAahB,MAAO,GAAE,EAAEG,QAAQ,EAACS,MAAM,CAAC;IAC1EX,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAE3DC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACK,IAAI,CAAC;IAC1BG,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAExB,OAAOV,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,OAAO3B,eAAe,CAAC2B,KAAK,CAACX,QAAQ,CAACK,IAAI,CAAC;EAC7C;AACF,CAAC,CACF;AACD,OAAO,MAAMO,cAAc,GAAGlC,gBAAgB,CAAC,sBAAsB,EAAE,eAAgC;EAAA,IAAzB;IAAEmC,MAAM;IAAE9B;EAAS,CAAC;EAChG,IAAI;IAEF,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,QAAQ,CAACQ,UAAU,CAAC;IAClDH,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEP,QAAQ,CAACS,SAAS,CAAC;IAChDJ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,QAAQ,CAACU,KAAK,CAAC;IACxCL,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACW,WAAW,CAAC;IACrDN,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,QAAQ,CAACY,QAAQ,CAAC;IAClDP,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEP,QAAQ,CAACa,eAAe,CAAC;IAE5D,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QAEP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,KAAK,CAAE,cAAaY,MAAO,EAAC,EAAE9B,QAAQ,EAACc,MAAM,CAAC;IACzES,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACK,IAAI,CAAC;IAE1B,OAAOL,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAMG,KAAK,CAAC,uBAAuB,CAAC;EACtC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGrC,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EAC1E,MAAMsB,QAAQ,GAAG,MAAMrB,GAAG,CAACqC,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAOhB,QAAQ,CAACK,IAAI;AACtB,CAAC,CAAC;AAGF,OAAO,MAAMY,cAAc,GAAGvC,gBAAgB,CAAC,kBAAkB,EAAE,MAAOmC,MAAM,IAAK;EACnF,MAAMlC,GAAG,CAACuC,MAAM,CAAE,cAAaL,MAAO,EAAC,CAAC;EACxC,OAAOA,MAAM;AACf,CAAC,CAAC;AAIF,MAAMhB,MAAM,GAAG;EACbC,OAAO,EAAE;IACPC,aAAa,EAAG,UAASb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;IAAE;IAC1D,cAAc,EAAE,qBAAqB,CAAE;EACzC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}