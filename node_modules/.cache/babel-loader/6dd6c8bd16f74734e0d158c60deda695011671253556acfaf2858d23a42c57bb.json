{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\nimport AuthService from \"../auth/authServices\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n// export const signupUser = createAsyncThunk(\n//     \"auth/register\",\n//     async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n//       try {\n//         const response = await fetch(\n//           \"http://34.159.231.164/api/auth/register/\",\n\n//           {\n//             method: \"POST\",\n//             headers: {\n//               Accept: \"application/json\",\n//               \"Content-Type\": \"application/json\",\n//             //   'Access-Control-Allow-Origin': '*',\n//             //   'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n//             //   'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS',\n\n//             },\n//             body: JSON.stringify({\n//                 password2,\n//               email,\n//               password,\n//               first_name,\n//               last_name\n//             }),\n//           }\n//         )\n//         let data = await response.json()\n//         console.log(\"data\", data)\n//         if (response.status === 200) {\n//           localStorage.setItem(\"token\", data.token)\n//           return { ...data }\n//         } else {\n//           return thunkAPI.rejectWithValue(data)\n//         }\n//       } catch (e) {\n//         console.log(\"Error\", e.response.data)\n//         return thunkAPI.rejectWithValue(e.response.data)\n//       }\n//     }\n//   )\n\nexport const register = createAsyncThunk(\"auth/register\", async (_ref, thunkAPI) => {\n  let {\n    password2,\n    email,\n    password,\n    first_name,\n    last_name\n  } = _ref;\n  try {\n    const response = await AuthService.register(password2, email, password, first_name, last_name);\n    thunkAPI.dispatch(setMessage(response.data.message));\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (_ref2, thunkAPI) => {\n  let {\n    email,\n    password\n  } = _ref2;\n  try {\n    const data = await AuthService.login(email, password);\n    // console.log(data)\n    return {\n      user: data\n    };\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    thunkAPI.dispatch(setMessage(message));\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await AuthService.logout();\n});\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [signupUser.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [signupUser.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoggedIn = true;\n      state.user = action.payload.user;\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoggedIn = false;\n      state.user = null;\n    }\n  }\n});\nconst {\n  reducer\n} = authSlice;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","setMessage","AuthService","user","JSON","parse","localStorage","getItem","register","thunkAPI","password2","email","password","first_name","last_name","response","dispatch","data","message","console","log","error","toString","rejectWithValue","login","logout","initialState","isLoggedIn","authSlice","name","extraReducers","signupUser","fulfilled","state","action","rejected","payload","reducer"],"sources":["/Users/sabrina_/Documents/prog/G4G-project/g4g-test/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./messageSlice.js\";\n\nimport AuthService from \"../auth/authServices\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n\n// export const signupUser = createAsyncThunk(\n//     \"auth/register\",\n//     async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n//       try {\n//         const response = await fetch(\n//           \"http://34.159.231.164/api/auth/register/\",\n          \n//           {\n//             method: \"POST\",\n//             headers: {\n//               Accept: \"application/json\",\n//               \"Content-Type\": \"application/json\",\n//             //   'Access-Control-Allow-Origin': '*',\n//             //   'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n//             //   'Access-Control-Request-Method': 'GET, POST, DELETE, PUT, OPTIONS',\n\n//             },\n//             body: JSON.stringify({\n//                 password2,\n//               email,\n//               password,\n//               first_name,\n//               last_name\n//             }),\n//           }\n//         )\n//         let data = await response.json()\n//         console.log(\"data\", data)\n//         if (response.status === 200) {\n//           localStorage.setItem(\"token\", data.token)\n//           return { ...data }\n//         } else {\n//           return thunkAPI.rejectWithValue(data)\n//         }\n//       } catch (e) {\n//         console.log(\"Error\", e.response.data)\n//         return thunkAPI.rejectWithValue(e.response.data)\n//       }\n//     }\n//   )\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async ({ password2, email, password,first_name,last_name }, thunkAPI) => {\n    try {\n      const response = await AuthService.register(password2, email, password,first_name,last_name);\n      thunkAPI.dispatch(setMessage(response.data.message));\n      console.log(response.data)\n      return response.data;\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      thunkAPI.dispatch(setMessage(message));\n      return thunkAPI.rejectWithValue();\n    }\n  }\n);\n\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ email, password }, thunkAPI) => {\n      try {\n        const data = await AuthService.login(email, password);\n        // console.log(data)\n        return { user: data };\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue();\n      }\n    }\n  );\n\n  export const logout = createAsyncThunk(\"auth/logout\", async () => {\n    await AuthService.logout();\n  });\n\n  const initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\n\n  const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n      [signupUser.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [signupUser.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n      },\n      [login.fulfilled]: (state, action) => {\n        state.isLoggedIn = true;\n        state.user = action.payload.user;\n      },\n      [login.rejected]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n      [logout.fulfilled]: (state, action) => {\n        state.isLoggedIn = false;\n        state.user = null;\n      },\n    },\n  });\n  \n  const { reducer } = authSlice;\n  export default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}